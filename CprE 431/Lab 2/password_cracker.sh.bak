#!/bin/bash

# File paths
password_hash="$1"  # Administrator password hash passed as an argument
password_list="$2"  # Path to the NIST 100K password list passed as an argument

# Extract hash type and salt from the provided hash
IFS='$' read -r _ hash_type salt hash <<< "$password_hash"

# Inform the user
echo "Hash type: $hash_type"
echo "Salt: $salt"

# Determine the OpenSSL algorithm based on the hash type
if [[ "$hash_type" == "1" ]]; then
    algo="md5"
elif [[ "$hash_type" == "5" ]]; then
    algo="sha256"
elif [[ "$hash_type" == "6" ]]; then
    algo="sha512"
else
    echo "Unknown hash type."
    exit 1
fi

# Function to generate hash and compare with the shadow file hash
crack_password() {
    local password=$1
    # Generate a password hash using the salt and the selected algorithm
    generated_hash=$(openssl passwd -$algo -salt "$salt" "$password")
    
    # Compare the generated hash with the original password hash (ignoring the first part)
    if [[ "$generated_hash" == "$password_hash" ]]; then
        echo "Password found: $password"
        exit 0
    fi
}

# Iterate through the password list and try cracking
while read -r password; do
    crack_password "$password"
done < "$password_list"

echo "Password cracking failed. No matching password found."
